# ===============================
# = DATA SOURCE
# ===============================

# Google Cloud Platform project
spring.cloud.gcp.project-id = mutants-yandrymarquez14927
#spring.cloud.gcp.credentials.location = file: [Especificar archivo]
#spring.cloud.gcp.sql.jdbcDrive=com.mysql.jdbc.Driver

# Set here configurations for the database connection
spring.datasource.platform=mysql

# Google Cloud SQL connection
spring.cloud.gcp.sql.enabled=true
spring.cloud.gcp.sql.database-name=mutants_db
spring.cloud.gcp.sql.instance-connection-name=mutants-yandrymarquez14927:northamerica-northeast1:mutantes-gcp-cloudsql-instance

# Local connection
#spring.datasource.url = jdbc:mysql://127.0.0.1/mutants_db

# Username and password
spring.datasource.username = root
spring.datasource.password = root

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect